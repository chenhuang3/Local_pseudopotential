c $Header:$
cmf 27-06-03 extended to elements beyond Hg, not all radii available yet
c
      real*8 function defrtm(n,l,z)
      
      implicit none
      include  'parameter.h'
      integer  i,j,n,l,z,ra,radef
      integer  r(4,mzmx)
      parameter (radef=250)
      if(z .lt. 1) z = 1
      if(z .lt. 1 .or. n .lt. l+1 .or. l .lt. 0 .or. z.gt.mzmx) then
        write(ie,'(a/,a,i4,a,i3,a,i3,a/,a)')
     1    '%defrtm - ERROR: default cutoff radius of Troullier-Martins',
     1    ' potential not implemented for z=',z,' n=',n,' l=',l,'.',
     1    ' ACTION: check input or contact author.'
        stop
      endif
      do j=1,4
        r(j,z) = 0
      enddo

      r(1,1)  = 130

      r(1,2)  = 110

      r(1,3)  = 220
      r(3,3)  = 250

      r(1,4)  = 210
      r(3,4)  = 240

      r(1,5)  = 170

      r(1,6)  = 150

      r(1,7)  = 145

      r(1,8)  = 140

      r(1,9)  = 135

      r(1,10) = 130

      r(1,11) = 271
      r(2,11) = 271
      r(3,11) = 300

      r(1,12) = 210
      r(2,12) = 240
      r(2,12) = 250

      r(1,13) = 180
      r(2,13) = 200
      r(3,13) = 215

      r(1,14) = 173
      r(2,14) = 190
      r(3,14) = 203

      r(1,15) = 166
      r(2,15) = 180
      r(3,15) = 196

      r(1,16) = 159
      r(2,16) = 170
      r(3,16) = 189
 
      r(1,17) = 152
      r(1,17) = 160
      r(3,17) = 182

      r(1,18) = 145
      r(3,18) = 175

      r(1,19) = 330
      r(2,19) = 320
      if(n .eq. 3)  r(1,19) = 180

      r(1,20) = 280
      r(2,20) = 300
      r(3,20) = 260
      if(n .eq. 3)  r(1,20) = 180
      if(n .eq. 3)  r(3,20) = 260

      r(1,21) = 274
      r(2,21) = 274
      r(3,21) = 245

      r(1,22) = 266
      r(2,22) = 266
      r(3,22) = 240

      r(1,23) = 262
      r(2,23) = 262
      r(3,23) = 240

      r(1,24) = 256
      r(2,24) = 256
      r(3,24) = 235

      r(1,25) = 242
      r(2,25) = 250
      r(3,25) = 230

      r(1,26) = 235
      r(2,26) = 245
      r(3,26) = 225

      r(1,27) = 230
      r(2,27) = 240
      r(3,27) = 220

      r(1,28) = 225
      r(2,28) = 235
      r(3,28) = 215

      r(1,29) = 210
      r(2,29) = 230
      r(3,29) = 210

      r(1,30) = 205
      r(2,30) = 230
      r(3,30) = 270
      if(n .eq. 3) r(3,30) = 205

      r(1,31) = 210
      r(2,31) = 230
      r(3,31) = 250
      if(n .eq. 3) r(3,31) = 210

      r(1,32) = 200
      r(2,32) = 220
      r(3,32) = 250

      r(1,33) = 200
      r(2,33) = 220
      r(3,33) = 245

      r(1,34) = 190
      r(2,34) = 210
      r(3,34) = 240

      r(1,35) = 180
      r(2,35) = 210
      r(3,35) = 220

      r(1,36) = 175
      r(2,36) = 200
      r(3,36) = 210

      r(1,37) = 400
      r(2,37) = 425
      r(3,37) = 350

      r(1,38) = 350
      r(2,38) = 400
      r(3,38) = 350

      r(1,39) = 320
      r(2,39) = 320
      r(3,39) = 270

      r(1,40) = 295
      r(2,40) = 310
      r(3,40) = 260

      r(1,41) = 280
      r(2,41) = 300
      r(3,41) = 250

      r(1,42) = 270
      r(2,42) = 280
      r(3,42) = 246

      r(1,43) = 260
      r(2,43) = 265
      r(3,42) = 244

      r(1,44) = 250
      r(2,44) = 260
      r(3,44) = 242

      r(1,45) = 250
      r(2,45) = 260
      r(3,45) = 240

      r(1,46) = 248
      r(2,46) = 260
      r(3,46) = 238

      r(1,47) = 242
      r(2,47) = 262
      r(3,47) = 242

      r(1,48) = 242
      r(2,48) = 254
      r(3,48) = 234

      r(1,49) = 244
      r(2,49) = 254
      r(3,49) = 280
      if(n .eq. 4) r(3,49) = 242

      r(1,50) = 234
      r(2,50) = 244
      r(3,50) = 275
      if(n .eq. 4) r(3,49) = 234

      r(1,51) = 226
      r(2,51) = 238
      r(3,51) = 270

      r(1,52) = 226
      r(2,52) = 230
      r(3,52) = 270

      r(1,53) = 215
      r(2,53) = 224
      r(3,53) = 270

      r(1,54) = 210
      r(2,54) = 210
      r(3,54) = 250

      r(1,55) = 400
      r(2,55) = 450
      r(3,55) = 400
      if(n .eq. 5)  r(1,55) = 230
      if(n .eq. 5)  r(2,55) = 260

      r(1,56) = 430
      r(2,56) = 500
      r(3,56) = 400
      if(n .eq. 5)  r(1,56) = 230
      if(n .eq. 5)  r(2,56) = 260

      r(1,58) = 350
      r(2,58) = 400
      r(3,58) = 300
      r(4,58) = 320

      r(1,72) = 280
      r(2,72) = 284
      r(3,72) = 246

      r(1,73) = 268
      r(2,73) = 284
      r(3,73) = 246

      r(1,74) = 264
      r(2,74) = 270
      r(3,74) = 246

      r(1,75) = 260
      r(2,75) = 266
      r(3,75) = 246

      r(1,76) = 256
      r(2,76) = 270
      r(3,76) = 254

      r(1,77) = 254
      r(2,77) = 268
      r(3,77) = 254

      r(1,78) = 254
      r(2,78) = 268
      r(3,78) = 254

      r(1,79) = 254
      r(2,79) = 268
      r(3,79) = 254

      r(1,80) = 250
      r(2,80) = 250
      r(3,80) = 285
      if(n .eq. 5) r(3,80) = 240

      r(1,82) = 240
      r(2,82) = 240
      r(3,82) = 265

      r(1,83) = 230
      r(2,83) = 230
      r(3,83) = 250

      ra = r(min(l+1,4),z)
      if(ra .eq. 0 .and. l .ge. 3) ra = r(3,z)
      if(ra .eq. 0 .and. l .ge. 2) ra = r(2,z)
      if(ra .eq. 0 .and. l .ge. 1) ra = r(1,z)

      if(ra .eq. 0) then
        ra=radef
        write(iofhipp,'(a/,a/,a,i4,a,i3,a,i3,a,f8.3,a/,a/,a)')
     1    '%defrtm - WARNING: no specific default cutoff radius of',
     1    ' Troullier-Martins potential implemented for',
     1    ' z=',z,' n=',n,' l=',l,', but set to r=',0.01d0*radef,'.',
     1    ' ACTION: adjust by hand using the optional input lines,',
     1    ' see documentation or contact author.'
      endif

      defrtm = 0.01d0*ra

      return
      end
